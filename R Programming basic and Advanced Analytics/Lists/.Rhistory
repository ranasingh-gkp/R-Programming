getwd()
setwd("C:\\Users\\user\\Desktop\\a\\data preparation")
fin <- read.csv("future 500.csv")
fin
head(fin)
tail(fin)
str(fin)
names(fin)
summary(fin)
#factor is basically a categorical variable
# id and inception are integer but better recognised as factor
#---changing non factor to factor
fin$ID <-factor(fin$ID)
fin$Inception <-factor(fin$Inception)
str(fin)
#---FVT(factor variable trap)
a <- c("12","13","14")
a
typeof(a)
b<- as.numeric(a)
typeof(b)
# ----converting into numeric for factor
z<-factor(c("12","13","14"))
z# r seen as category
typeof(z)
y<- as.numeric(z)# you will pick up factorization value
y# factor trap(since they are label variable )
#----correct way
x<- as.numeric(as.character(z))# factor variable first convert into character then numeric
x
typeof(x)
# --FVT EXAMPLE
head(fin)
#fin$Profit <- factor(fin$Profit)#dangerous
str(fin)
head(fin)
#fin$profit <- as.numeric(fin$Profit)#dangerous
#sub() and gsub()
?sub
fin$Expenses <- gsub("Dollars", "", fin$Expenses)# replace Dollars
fin$Expenses <- gsub(",", "", fin$Expenses)
fin$Revenue <- gsub("$","", fin$Revenue)# not working because $ sign is a special sign in R
fin$Revenue <- gsub("\\$","", fin$Revenue)# remove $ sign
head(fin)
fin$Revenue <-gsub(",","",fin$Revenue)
fin$Growth <- gsub("%","", fin$Growth)
str(fin)
head(fin)
# convert charactor into numeric
fin$Expenses <- as.numeric(fin$Expenses)
fin$Revenue <- as.numeric(fin$Revenue)
fin$Growth <- as.numeric(fin$Growth)
summary(fin)
View(fin)
#----------- Removing NA value
?NA
head(fin,24)
fin[!complete.cases(fin),]
fin[!complete.cases(fin),]
fin[!complete.cases(fin),]
fin <- read.csv("Future 500.csv", na.strings=c(""))# replace all impty value with NA
View(fin)
head(fin,20)
getwd()
setwd("C:\\Users\\user\\Desktop\\a\\data preparation")
#fin <- read.csv("future 500.csv")
fin <- read.csv("Future 500.csv", na.strings=c(""))# replace all impty value with NA
fin
head(fin)
tail(fin)
str(fin)
names(fin)
summary(fin)
#factor is basically a categorical variable
# id and inception are integer but better recognised as factor
#---changing non factor to factor
fin$ID <-factor(fin$ID)
fin$Inception <-factor(fin$Inception)
str(fin)
#---FVT(factor variable trap)
a <- c("12","13","14")
a
typeof(a)
b<- as.numeric(a)
typeof(b)
# ----converting into numeric for factor
z<-factor(c("12","13","14"))
z# r seen as category
typeof(z)
y<- as.numeric(z)# you will pick up factorization value
y# factor trap(since they are label variable )
#----correct way
x<- as.numeric(as.character(z))# factor variable first convert into character then numeric
x
typeof(x)
# --FVT EXAMPLE
head(fin)
#fin$Profit <- factor(fin$Profit)#dangerous
str(fin)
head(fin)
#fin$profit <- as.numeric(fin$Profit)#dangerous
#sub() and gsub()
?sub
fin$Expenses <- gsub("Dollars", "", fin$Expenses)# replace Dollars
fin$Expenses <- gsub(",", "", fin$Expenses)
fin$Revenue <- gsub("$","", fin$Revenue)# not working because $ sign is a special sign in R
fin$Revenue <- gsub("\\$","", fin$Revenue)# remove $ sign
head(fin)
fin$Revenue <-gsub(",","",fin$Revenue)
fin$Growth <- gsub("%","", fin$Growth)
str(fin)
head(fin)
# convert charactor into numeric
fin$Expenses <- as.numeric(fin$Expenses)
fin$Revenue <- as.numeric(fin$Revenue)
fin$Growth <- as.numeric(fin$Growth)
summary(fin)
#----------- Removing NA value
?NA
head(fin,24)
complete.cases(fin)# is there NA in any column rowwise
fin[!complete.cases(fin),]
fin <- read.csv("Future 500.csv", na.strings=c(""))# replace all impty value with NA
head(fin,20)
head(fin,20)
#sub() and gsub()
?sub
fin$Expenses <- gsub("Dollars", "", fin$Expenses)# replace Dollars
fin$Expenses <- gsub(",", "", fin$Expenses)
fin$Revenue <- gsub("$","", fin$Revenue)# not working because $ sign is a special sign in R
fin$Revenue <- gsub("\\$","", fin$Revenue)# remove $ sign
head(fin)
fin$Revenue <-gsub(",","",fin$Revenue)
fin$Growth <- gsub("%","", fin$Growth)
str(fin)
head(fin)
# convert charactor into numeric
fin$Expenses <- as.numeric(fin$Expenses)
fin$Revenue <- as.numeric(fin$Revenue)
fin$Growth <- as.numeric(fin$Growth)
summary(fin)
#----------- Removing NA value
?NA
head(fin,24)
complete.cases(fin)# is there NA in any column rowwise
head(fin,20)
str(fin)
#----FILTER: USING WHICH()FOR NON-MISSING DATA
head(fin)
fin[fin$Revenue == 9746272,]
which(fin$Revenue==9746272)
fin[3,]
fin[which(fin$Revenue==9746272)]
fin[which(fin$Revenue==9746272),]
#---------usig is.na() for missing value
head(fin,25)
fin$Expenses==NA
FIN[fin$Expenses==NA,]
fin[fin$Expenses==NA,]
?is.na()# check something have NA value
fin[is.na(fin$Expenses),]
fin[is.na(fin$Expenses),]
fin[is.na(fin),]
str(fin)
summary(fin)
#--------removing record of missing data
fin(!complete.cases(fin),)#all row have empty value
#--------removing record of missing data
fin[!complete.cases(fin),]#all row have empty value
fin[is.na(fin$Industry),]
fin[!is.na(fin$Industry),]
# resetting the dataframe index
rownames(fin)
# resetting the dataframe index
rownames(fin)
#replacing missing data: factual analysis
fin[!complete.cases(fin),]
fin[is.na(fin$State),]
fin[is.na(fin$State),]
fin[is.na(fin$State)& fin$City == "New york", "State"]<- "NY"
fin[!complete.cases(fin),]
FIN[C(11,377),]
fin[c(11,377),]
fin[is.na(fin$State),]
fin[is.na(fin$State)& fin$City == "New York", "State"]<- "NY"
fin[!complete.cases(fin),]
fin[c(11,377),]
fin[is.na(fin$State),]
fin[is.na(fin$State) & fin$City == "San Francisco", "State"]<- "CA"
fin[c(82,265),]
View(fin)
fin[fin$Industry == "Retail",]
fin[fin$Industry == "Retail" & fin$State=="SC",]
#replacing missing data: MEDIAN Iimputation method
fin[!complete.cases(fin),]
#replacing missing data: MEDIAN Iimputation method
fin[!complete.cases(fin),]
med_empl_retail <- median(fin[fin$Industry== "Retail", "Employees"], na.rm = TRUE)# ignore all NA value(na.rm = TRUE)
fin[is.na(fin$Employees) & fin$Industry == "Retail", "Employees"]<- med_empl_retail
fin[3,]
med_empl_finserv <- median(fin[fin$Industry== "Financial Services", "Employees"], na.rm = TRUE)
fin[is.na(fin$Employees) & fin$Industry == "Financial Services", "Employees"]<-med_empl_finserv
fin[330,]
fin[!complete.cases(fin),]
med_growth_constr <- median(fin[fin$Industry== "Construction", "Growth"], na.rm = TRUE)
med_growth_constr
med_growth_constr
fin[is.na(fin$Growth) & fin$Industry == "Construction", "Growth"] <- med_growth_constr
fin[!complete.cases(fin),]
med_rev_constr <- median(fin[fin$Industry== "Construction", "Revenue"], na.rm = TRUE)
med_rev_constr
fin[is.na(fin$Revenue) & fin$Industry == "Construction", "Revenue"] <- med_rev_constr
#revenue
fin[!complete.cases(fin),]
#expenses
fin[!complete.cases(fin),]
med_exp_constr <- median(fin[fin$Industry== "Construction", "Expenses"], na.rm = TRUE)
med_exp_constr
med_exp_constr
fin[is.na(fin$Expenses) & fin$Industry == "Construction", "Expenses"] <- med_exp_constr
#expenses
fin[!complete.cases(fin),]
fin[is.na(fin$Expenses) & fin$Industry == "Construction", is.na(fin$Profit) ,"Expenses"] <- med_exp_constr
fin[is.na(fin$Expenses) & fin$Industry == "Construction" & is.na(fin$Profit),"Expenses"] <- med_exp_constr
#expenses
fin[!complete.cases(fin),]
View(fin)
#replacing missing data:deriving value
fin[is.na(fin$Profit),]
#replacing missing data:deriving value
fin[is.na(fin$Profit),]
fin[is.na(fin$Profit), "Profit"] <- fin[is.na(fin$Profit), "Revenue"]  - fin[is.na(fin$Profit), "Expenses"]
#replacing missing data:deriving value
fin[is.na(fin$Profit),]
#expenses
fin[!complete.cases(fin),]
fin[is.na(fin$Expenses), "Expenses"] <- fin[is.na(fin$Expenses), "Revenue"]  - fin[is.na(fin$Expenses), "Profit"]
#expenses
fin[!complete.cases(fin),]
#--------------visulization
install.packages("ggplot2")
library(ggplot2)
p<- ggplot(data = fit)
p<- ggplot(data = fin)
p+geom_point(aes(x=Revenue, y=Expense,  colour =Industry, size=profile))
p<- ggplot(data = fin)
p+geom_point(aes(x=Revenue, y=Expense,  colour =Industry, size=profile))
p+geom_point(aes(x=Revenue, y=Expenses,  colour =Industry, size=profile))
library(ggplot2)
p<- ggplot(data = fin)
p+geom_point(aes(x=Revenue, y=Expenses,  colour =Industry, size=profile))
p+geom_point(aes(x=Revenue, y=Expenses,  colour =Industry, size=Profit))
#industry trend for expenses
d= ggplot(data=fin, aes(x=Revenue, y=Expenses, colour=Industry))
d+geom_point()+geom_smooth(fill=NA, size=1.2)
#industry trend for expenses
d= ggplot(data=fin, aes(x=Revenue, y=Expenses, colour=Industry))
d+geom_point()+geom_smooth(fill=NA, size=1.2)
#industry trend for expenses
d= ggplot(data=fin, aes(x=Revenue, y=Expenses, colour=Industry))
d+geom_point()+geom_smooth(fill=NA, size=1.2)
#boxplot
f<- ggplot(data=fin, aes(x=Industry, y=Growth, colour= Industry))
f+geom_boxplot(size=1)
f+geom_jitter()+
geom_boxplot(size=1, alpha=0.5, outlier.color = NA)
getwd()
setwd("C:\\Users\\user\\Desktop\\a\\Lists")
getwd()
#fin <- read.csv("future 500.csv")
util <- read.csv("machine utilization.csv", na.strings=c(""))# replace all impty value with NA
#fin <- read.csv("future 500.csv")
util <- read.csv("machine utilization.csv", na.strings=c(""))# replace all impty value with NA
View(util)
util
head(util)
tail(util)
str(util)
names(util)
summary(util)
#data utilization column
util$Utilization = 1- util$Percent.Idle
head(util)
tail(util)
util$posixtime <- as.POSIXct(util$Timestamp, format = "%d/%m/%Y %H:%M")
head(util,12)
summary(util)
head(util,12)
summary(util)
#rearrange columns in df
util$Timestamp <-NULL
util<- util[,c(4,1,2,3)]
head(util,12)
#list
RL1<- util[util$Machine=="RL1"]
#list
RL1<- util[util$Machine=="RL1",]
Summaryrl1
Summary(RL1)
RL1$Machine <- factor(RL1$Machine)
Summary(RL1)
RL1$Machine <- factor(RL1$Machine)
Summary(RL1)
summary(RL1)
summary(RL1)
RL1$Machine <- factor(RL1$Machine)
summary(RL1)
